ylab("Y LABEL") + xlab("X LABEL") + ggtitle("TITLE OF THE FIGURE")
p3
p3 + kobe_theme2()
pushViewport(viewport(layout = grid.layout(4, 3)))
grid.rect(gp = gpar(fill = "#E2E2E3", col = "#E2E2E3"))
print(p1, vp = vplayout(1, 2))
install.packages("GGally")
library("GGally")
print(p1, vp = vplayout(1, 2))
vplayout
vplayout <- function(x,y)
viewport(layout.pos.row = x, layout.pos.col = y)
print(p1, vp = vplayout(1, 2))
library(grid)
pdf("~/Documents/Infographics1.pdf", width = 10, height = 20)
grid.newpage()
pushViewport(viewport(layout = grid.layout(4, 3)))
grid.rect(gp = gpar(fill = "#E2E2E3", col = "#E2E2E3"))
grid.text("INFOGRAPHIC", y = unit(1, "npc"), x = unit(0.5, "npc"), vjust = 1, hjust = .5, gp = gpar(fontfamily = "Impact", col = "#A9A8A7", cex = 12, alpha = 0.3))
grid.text("RProgramming", y = unit(0.94, "npc"), gp = gpar(fontfamily = "Impact", col = "#E7A922", cex = 6.4))
grid.text("BY AL-AHMADGAID B. ASAAD", vjust = 0, y = unit(0.92, "npc"), gp = gpar(fontfamily = "Impact", col = "#552683", cex = 0.8))
grid.text("ANALYSIS WITH PROGRAMMING", vjust = 0, y = unit(0.913, "npc"), gp = gpar(fontfamily = "Impact", col = "#552683", cex = 0.8))
grid.text("alstatr.blogspot.com", vjust = 0, y = unit(0.906, "npc"), gp = gpar(fontfamily = "Impact", col = "#552683", cex = 0.8))
print(p3, vp = vplayout(4, 1:3))
print(p1, vp = vplayout(3, 1:3))
print(p2, vp = vplayout(2, 1:3))
grid.rect(gp = gpar(fill = "#E7A922", col = "#E7A922"), x = unit(0.5, "npc"), y = unit(0.82, "npc"), width = unit(1, "npc"), height = unit(0.11, "npc"))
grid.text("CATEGORY", y = unit(0.82, "npc"), x = unit(0.5, "npc"), vjust = .5, hjust = .5, gp = gpar(fontfamily = "Impact", col = "#CA8B01", cex = 13, alpha = 0.3))
grid.text("A VERY VERY VERY VERY LONG TITLE", vjust = 0, hjust = 0, x = unit(0.01, "npc"), y = unit(0.88, "npc"), gp = gpar(fontfamily = "Impact", col = "#552683", cex = 1.2))
grid.text("DATA INFO", vjust = 0, hjust = 0, x = unit(0.01, "npc"), y = unit(0.86, "npc"), gp = gpar(fontfamily = "Impact", col = "white", cex = 1.2))
grid.text(paste(
"Syndicated to",
"Source",
"Author",
"Maintainer",
"Frequency of Update",
"Granularity",
"Temporal Date", sep = "\n"), vjust = 0, hjust = 0, x = unit(0.01, "npc"), y = unit(0.79, "npc"), gp = gpar(fontfamily = "Impact", col = "#552683", cex = 0.8))
grid.text(paste(
"http://alstatr.blogspot.com",
"http://alstatr.blogspot.com",
"Analysis with Programming",
"Al-Ahmadgaid B. Asaad",
"Annually",
"National",
"2011-2013", sep = "\n"), vjust = 0, hjust = 0, x = unit(0.15, "npc"), y = unit(0.79, "npc"), gp = gpar(fontfamily = "Impact", col = "#552683", cex = 0.8))
dev.off()
library(grid)
pdf("tic-tank/Dorita/CCE - CINTEL/Aplicacion web/Pruebas/info.pdf", width = 10, height = 20)
grid.newpage()
pushViewport(viewport(layout = grid.layout(4, 3)))
grid.rect(gp = gpar(fill = "#E2E2E3", col = "#E2E2E3"))
grid.text("INFOGRAPHIC", y = unit(1, "npc"), x = unit(0.5, "npc"), vjust = 1, hjust = .5, gp = gpar(fontfamily = "Impact", col = "#A9A8A7", cex = 12, alpha = 0.3))
library(ggplot2)
library(extrafont)
y1 <- round(rnorm(n = 36, mean = 7, sd = 2)) # Simulate data from normal distribution
y2 <- round(rnorm(n = 36, mean = 21, sd = 6))
y3 <- round(rnorm(n = 36, mean = 50, sd = 8))
x <- rep(LETTERS[1:12], 3)
grp <- rep(c("Grp 1", "Grp 2", "Grp 3"), each = 12)
dat <- data.frame(grp, x, y1, y2, y3)
# Using default theme
p1 <- ggplot(data = dat, aes(x = x, y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1
font_import() # Import all fonts
kobe_theme <- function() {
theme(
plot.background = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
panel.background = element_rect(fill = "#E2E2E3"),
#panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "#E7A922", family = "Impact"),
plot.title = element_text(colour = "#552683", face = "bold", size = 18, vjust = 1, family = "Impact"),
axis.title = element_text(colour = "#552683", face = "bold", size = 13, family = "Impact"),
panel.grid.major.x = element_line(colour = "#E7A922"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
strip.text = element_text(family = "Impact", colour = "white"),
strip.background = element_rect(fill = "#E7A922"),
axis.ticks = element_line(colour = "#E7A922")
)
}
x_id <- rep(12:1, 3) # use this index for reordering the x ticks
p1 <- ggplot(data = dat, aes(x = reorder(x, x_id), y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1 + kobe_theme()
p2 <- ggplot(data = dat, aes(x = x, y = y2, group = factor(grp))) +
geom_line(stat = "identity", aes(linetype = factor(grp)), size = 0.7, colour = "#552683") +
ylab("Y LABEL") + xlab("X LABEL") + ggtitle("TITLE OF THE FIGURE")
p2
kobe_theme2 <- function() {
theme(
legend.position = "bottom", legend.title = element_text(family = "Impact", colour = "#552683", size = 10),
legend.background = element_rect(fill = "#E2E2E3"),
legend.key = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
legend.text = element_text(family = "Impact", colour = "#E7A922", size = 10),
plot.background = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
panel.background = element_rect(fill = "#E2E2E3"),
#    panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "#E7A922", family = "Impact"),
plot.title = element_text(colour = "#552683", face = "bold", size = 18, vjust = 1, family = "Impact"),
axis.title = element_text(colour = "#552683", face = "bold", size = 13, family = "Impact"),
panel.grid.major.y = element_line(colour = "#E7A922"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.text = element_text(family = "Impact", colour = "white"),
strip.background = element_rect(fill = "#E7A922"),
axis.ticks = element_line(colour = "#E7A922")
)
}
p2 + kobe_theme2() + scale_linetype_discrete("GROUP")
p3 <- ggplot(data = dat, aes(x = reorder(x, rep(1:12, 3)), y = y3, group = factor(grp))) +
geom_bar(stat = "identity", fill = "#552683") + coord_polar() + facet_grid(. ~ grp) +
ylab("Y LABEL") + xlab("X LABEL") + ggtitle("TITLE OF THE FIGURE")
p3
p3 + kobe_theme2()
vplayout <- function(x,y)
viewport(layout.pos.row = x, layout.pos.col = y)
library(ggplot2)
library(extrafont)
y1 <- round(rnorm(n = 36, mean = 7, sd = 2)) # Simulate data from normal distribution
y2 <- round(rnorm(n = 36, mean = 21, sd = 6))
y3 <- round(rnorm(n = 36, mean = 50, sd = 8))
x <- rep(LETTERS[1:12], 3)
grp <- rep(c("Grp 1", "Grp 2", "Grp 3"), each = 12)
dat <- data.frame(grp, x, y1, y2, y3)
# Using default theme
p1 <- ggplot(data = dat, aes(x = x, y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1
font_import() # Import all fonts
kobe_theme <- function() {
theme(
plot.background = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
panel.background = element_rect(fill = "#E2E2E3"),
#panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "#E7A922", family = "Impact"),
plot.title = element_text(colour = "#552683", face = "bold", size = 18, vjust = 1, family = "Impact"),
axis.title = element_text(colour = "#552683", face = "bold", size = 13, family = "Impact"),
panel.grid.major.x = element_line(colour = "#E7A922"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
strip.text = element_text(family = "Impact", colour = "white"),
strip.background = element_rect(fill = "#E7A922"),
axis.ticks = element_line(colour = "#E7A922")
)
}
x_id <- rep(12:1, 3) # use this index for reordering the x ticks
p1 <- ggplot(data = dat, aes(x = reorder(x, x_id), y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1 + kobe_theme()
rm(list=ls())
library(ggplot2)
library(extrafont)
y1 <- round(rnorm(n = 36, mean = 7, sd = 2)) # Simulate data from normal distribution
y2 <- round(rnorm(n = 36, mean = 21, sd = 6))
y3 <- round(rnorm(n = 36, mean = 50, sd = 8))
x <- rep(LETTERS[1:12], 3)
grp <- rep(c("Grp 1", "Grp 2", "Grp 3"), each = 12)
dat <- data.frame(grp, x, y1, y2, y3)
# Using default theme
p1 <- ggplot(data = dat, aes(x = x, y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1
font_import() # Import all fonts
kobe_theme <- function() {
theme(
plot.background = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
panel.background = element_rect(fill = "#E2E2E3"),
#panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "#E7A922", family = "Impact"),
plot.title = element_text(colour = "#552683", face = "bold", size = 18, vjust = 1, family = "Impact"),
axis.title = element_text(colour = "#552683", face = "bold", size = 13, family = "Impact"),
panel.grid.major.x = element_line(colour = "#E7A922"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
strip.text = element_text(family = "Impact", colour = "white"),
strip.background = element_rect(fill = "#E7A922"),
axis.ticks = element_line(colour = "#E7A922")
)
}
x_id <- rep(12:1, 3) # use this index for reordering the x ticks
p1 <- ggplot(data = dat, aes(x = reorder(x, x_id), y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1 + kobe_theme()
library(grid)
library(gridExtra)
library(grid)
library(ggplot2)
library(extrafont)
y1 <- round(rnorm(n = 36, mean = 7, sd = 2)) # Simulate data from normal distribution
y2 <- round(rnorm(n = 36, mean = 21, sd = 6))
y3 <- round(rnorm(n = 36, mean = 50, sd = 8))
x <- rep(LETTERS[1:12], 3)
grp <- rep(c("Grp 1", "Grp 2", "Grp 3"), each = 12)
dat <- data.frame(grp, x, y1, y2, y3)
# Using default theme
p1 <- ggplot(data = dat, aes(x = x, y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1
font_import() # Import all fonts
kobe_theme <- function() {
theme(
plot.background = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
panel.background = element_rect(fill = "#E2E2E3"),
#panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "#E7A922", family = "Impact"),
plot.title = element_text(colour = "#552683", face = "bold", size = 18, vjust = 1, family = "Impact"),
axis.title = element_text(colour = "#552683", face = "bold", size = 13, family = "Impact"),
panel.grid.major.x = element_line(colour = "#E7A922"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
strip.text = element_text(family = "Impact", colour = "white"),
strip.background = element_rect(fill = "#E7A922"),
axis.ticks = element_line(colour = "#E7A922")
)
}
x_id <- rep(12:1, 3) # use this index for reordering the x ticks
p1 <- ggplot(data = dat, aes(x = reorder(x, x_id), y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1 + kobe_theme()
y1 <- round(rnorm(n = 36, mean = 7, sd = 2)) # Simulate data from normal distribution
y2 <- round(rnorm(n = 36, mean = 21, sd = 6))
y3 <- round(rnorm(n = 36, mean = 50, sd = 8))
x <- rep(LETTERS[1:12], 3)
grp <- rep(c("Grp 1", "Grp 2", "Grp 3"), each = 12)
dat <- data.frame(grp, x, y1, y2, y3)
library(ggplot2)
# Using default theme
p1 <- ggplot(data = dat, aes(x = x, y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1
p1
library(grid)
library(extrafont)
library(ggplot2)
y1 <- round(rnorm(n = 36, mean = 7, sd = 2)) # Simulate data from normal distribution
y2 <- round(rnorm(n = 36, mean = 21, sd = 6))
y3 <- round(rnorm(n = 36, mean = 50, sd = 8))
x <- rep(LETTERS[1:12], 3)
grp <- rep(c("Grp 1", "Grp 2", "Grp 3"), each = 12)
dat <- data.frame(grp, x, y1, y2, y3)
# Using default theme
p1 <- ggplot(data = dat, aes(x = x, y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1
font_import() # Import all fonts
kobe_theme <- function() {
theme(
plot.background = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
panel.background = element_rect(fill = "#E2E2E3"),
#panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "#E7A922", family = "Impact"),
plot.title = element_text(colour = "#552683", face = "bold", size = 18, vjust = 1, family = "Impact"),
axis.title = element_text(colour = "#552683", face = "bold", size = 13, family = "Impact"),
panel.grid.major.x = element_line(colour = "#E7A922"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
strip.text = element_text(family = "Impact", colour = "white"),
strip.background = element_rect(fill = "#E7A922"),
axis.ticks = element_line(colour = "#E7A922")
)
}
x_id <- rep(12:1, 3) # use this index for reordering the x ticks
p1 <- ggplot(data = dat, aes(x = reorder(x, x_id), y = y1)) + geom_bar(stat = "identity", fill = "#552683") +
coord_flip() + ylab("Y LABEL") + xlab("X LABEL") + facet_grid(. ~ grp) +
ggtitle("TITLE OF THE FIGURE")
p1 + kobe_theme()
p2 <- ggplot(data = dat, aes(x = x, y = y2, group = factor(grp))) +
geom_line(stat = "identity", aes(linetype = factor(grp)), size = 0.7, colour = "#552683") +
ylab("Y LABEL") + xlab("X LABEL") + ggtitle("TITLE OF THE FIGURE")
p2
kobe_theme2 <- function() {
theme(
legend.position = "bottom", legend.title = element_text(family = "Impact", colour = "#552683", size = 10),
legend.background = element_rect(fill = "#E2E2E3"),
legend.key = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
legend.text = element_text(family = "Impact", colour = "#E7A922", size = 10),
plot.background = element_rect(fill = "#E2E2E3", colour = "#E2E2E3"),
panel.background = element_rect(fill = "#E2E2E3"),
#    panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "#E7A922", family = "Impact"),
plot.title = element_text(colour = "#552683", face = "bold", size = 18, vjust = 1, family = "Impact"),
axis.title = element_text(colour = "#552683", face = "bold", size = 13, family = "Impact"),
panel.grid.major.y = element_line(colour = "#E7A922"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.text = element_text(family = "Impact", colour = "white"),
strip.background = element_rect(fill = "#E7A922"),
axis.ticks = element_line(colour = "#E7A922")
)
}
p2 + kobe_theme2() + scale_linetype_discrete("GROUP")
p3 <- ggplot(data = dat, aes(x = reorder(x, rep(1:12, 3)), y = y3, group = factor(grp))) +
geom_bar(stat = "identity", fill = "#552683") + coord_polar() + facet_grid(. ~ grp) +
ylab("Y LABEL") + xlab("X LABEL") + ggtitle("TITLE OF THE FIGURE")
p3
p3 + kobe_theme2()
vplayout <- function(x,y)
viewport(layout.pos.row = x, layout.pos.col = y)
pdf("tic-tank/Dorita/CCE - CINTEL/Aplicacion web/Pruebas/infog.pdf", width = 10, height = 20)
grid.newpage()
pushViewport(viewport(layout = grid.layout(4, 3)))
grid.rect(gp = gpar(fill = "#E2E2E3", col = "#E2E2E3"))
grid.text("INFOGRAPHIC", y = unit(1, "npc"), x = unit(0.5, "npc"), vjust = 1, hjust = .5, gp = gpar(fontfamily = "Impact", col = "#A9A8A7", cex = 12, alpha = 0.3))
fints()
fonts()
fonts()
font_import()
grid.text("INFOGRAPHIC", y = unit(1, "npc"), x = unit(0.5, "npc"), vjust = 1, hjust = .5, gp = gpar(fontfamily = "Impact", col = "#A9A8A7", cex = 12, alpha = 0.3))
fonts() # Print list of all fonts
grid.text("INFOGRAPHIC", y = unit(1, "npc"), x = unit(0.5, "npc"), vjust = 1, hjust = .5, gp = gpar(fontfamily = "Amiri", col = "#A9A8A7", cex = 12, alpha = 0.3))
grid.text("INFOGRAPHIC", y = unit(1, "npc"), x = unit(0.5, "npc"), vjust = 1, hjust = .5, gp = gpar(fontfamily = "Arial", col = "#A9A8A7", cex = 12, alpha = 0.3))
grid.text("INFOGRAPHIC", y = unit(1, "npc"), x = unit(0.5, "npc"), vjust = 1, hjust = .5, gp = gpar( col = "#A9A8A7", cex = 12, alpha = 0.3))
grid.text("INFOGRAPHIC", y = unit(1, "npc"), x = unit(0.5, "npc"), vjust = 1, hjust = .5, gp = gpar( col = "#A9A8A7", cex = 12, alpha = 0.3))
grid.text("RProgramming", y = unit(0.94, "npc"), gp = gpar( col = "#E7A922", cex = 6.4)) #fontfamily = "Arial",
grid.text("BY AL-AHMADGAID B. ASAAD", vjust = 0, y = unit(0.92, "npc"), gp = gpar( col = "#552683", cex = 0.8))
grid.text("ANALYSIS WITH PROGRAMMING", vjust = 0, y = unit(0.913, "npc"), gp = gpar(col = "#552683", cex = 0.8))
grid.text("alstatr.blogspot.com", vjust = 0, y = unit(0.906, "npc"), gp = gpar( col = "#552683", cex = 0.8))
print(p3, vp = vplayout(4, 1:3))
print(p1, vp = vplayout(3, 1:3))
print(p2, vp = vplayout(2, 1:3))
grid.rect(gp = gpar(fill = "#E7A922", col = "#E7A922"), x = unit(0.5, "npc"), y = unit(0.82, "npc"), width = unit(1, "npc"), height = unit(0.11, "npc"))
grid.text("CATEGORY", y = unit(0.82, "npc"), x = unit(0.5, "npc"), vjust = .5, hjust = .5, gp = gpar( col = "#CA8B01", cex = 13, alpha = 0.3))
grid.text("A VERY VERY VERY VERY LONG TITLE", vjust = 0, hjust = 0, x = unit(0.01, "npc"), y = unit(0.88, "npc"), gp = gpar(col = "#552683", cex = 1.2))
grid.text("DATA INFO", vjust = 0, hjust = 0, x = unit(0.01, "npc"), y = unit(0.86, "npc"), gp = gpar( col = "white", cex = 1.2))
grid.text(paste(
"Syndicated to",
"Source",
"Author",
"Maintainer",
"Frequency of Update",
"Granularity",
"Temporal Date", sep = "\n"), vjust = 0, hjust = 0, x = unit(0.01, "npc"), y = unit(0.79, "npc"), gp = gpar(col = "#552683", cex = 0.8))
grid.text(paste(
"http://alstatr.blogspot.com",
"http://alstatr.blogspot.com",
"Analysis with Programming",
"Al-Ahmadgaid B. Asaad",
"Annually",
"National",
"2011-2013", sep = "\n"), vjust = 0, hjust = 0, x = unit(0.15, "npc"), y = unit(0.79, "npc"), gp = gpar( col = "#552683", cex = 0.8))
dev.off()
library("plotly")
library("dplyr")
library("lattice")
library("sp")
library("rgdal")
library("rgeos")
library("maptools")
library("plyr")
library("scales")
library("reshape2")
datos <- read.delim("0-Dorita/Trabajo/Universidades/Universidad del Rosario/Proyecto CCE - CINTEL/Aplicacion/Intento 1/src/Secop2limpioAA.txt")
shape <- readShapeSpatial("0-Dorita/Trabajo/Universidades/Universidad del Rosario/Proyecto CCE - CINTEL/Aplicacion/Intento 1/src/Mapas/COL_adm2.shp", repair = T)
setwd("~/tic-tank/Dorita/CCE - CINTEL/entregable_4_infografias/Prueba_inicial/PruebasInfo/Mapas")
datos <- read.delim("0-Dorita/Trabajo/Universidades/Universidad del Rosario/Proyecto CCE - CINTEL/Aplicacion/Intento 1/src/Secop2limpioAA.txt")
shape <- readShapeSpatial("0-Dorita/Trabajo/Universidades/Universidad del Rosario/Proyecto CCE - CINTEL/Aplicacion/Intento 1/src/Mapas/COL_adm2.shp", repair = T)
library("data.table")
shape <- readShapeSpatial("Mapas/COL_adm2.shp", repair = T)
shape1 <- readShapeSpatial("Mapas/Nuevos_mapas/depto.shp", repair = T)
mapa_ordenado <- fortify(shape1, region = "DPTO") %>%  data.table()
mapa_ordenado[, id := as.integer(id)]
mapa_anterior <- fortify(shape, region = "NAME_2") %>%  data.table()
divipola <- read.delim("divipola.csv", header = T, sep = ",", encoding = "UTF-8") %>% data.table()
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("DEPARTAMENTO", "CÃDIGO.DANE.DEL.DEPARTAMENTO")] %>% setnames(names(.), c("dpto", "cod_dpto", "conteo"))
p <- ggplot() + geom_map(data = mapa_ordenado, aes(map_id = id), map = mapa_ordenado, color = "aliceblue", fill = "red")+
geom_map(data = datos_simulados, aes(map_id = cod_dpto, fill = conteo),
map = mapa_ordenado) + expand_limits(x = mapa_ordenado$long, y = mapa_ordenado$lat)
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("DEPARTAMENTO", "CÃDIGO.DANE.DEL.DEPARTAMENTO")] %>% setnames(names(.), c("dpto", "cod_dpto", "conteo"))
names(divipola)
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("DEPARTAMENTO", "CóDIGO.DANE.DEL.DEPARTAMENTO")] %>% setnames(names(.), c("dpto", "cod_dpto", "conteo"))
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("DEPARTAMENTO", "CÓDIGO.DANE.DEL.DEPARTAMENTO")] %>% setnames(names(.), c("dpto", "cod_dpto", "conteo"))
p <- ggplot() + geom_map(data = mapa_ordenado, aes(map_id = id), map = mapa_ordenado, color = "aliceblue", fill = "red")+
geom_map(data = datos_simulados, aes(map_id = cod_dpto, fill = conteo),
map = mapa_ordenado) + expand_limits(x = mapa_ordenado$long, y = mapa_ordenado$lat)
p
shape1 <- readShapeSpatial("Mapas/Nuevos_mapas/depto.shp", repair = T)
shape <- readShapeSpatial("Mapas/Nuevos_mapas/depto.shp", repair = T)
shape
mapa_ordenado
shape <- readShapeSpatial("Mapas/Nuevos_mapas/depto.shp", repair = T)
shape <- readShapeSpatial("Mapas/Nuevos_mapas/mpio.shp", repair = T)
shape
mapa_ordenado <- fortify(shape_mpio, region = "DPTO") %>%  data.table()
shape_mpio <- readShapeSpatial("Mapas/Nuevos_mapas/mpio.shp", repair = T)
mapa_ordenado <- fortify(shape_mpio, region = "DPTO") %>%  data.table()
mapa_ordenado
mapa_ordenado[, id := as.integer(id)]
mapa_ordenado
shape_mpio <- readShapeSpatial("Mapas/Nuevos_mapas/mpio.shp", repair = T)
mapa_ordenado_mpio <- fortify(shape_mpio, region = "DPTO") %>%  data.table()
mapa_ordenado_mpio[, id := as.integer(id)]
mapa_ordenado_mpio
mapa_ordenado_mpio
names(shape_mpio)
mapa_ordenado_mpio <- fortify(shape_mpio, region = "MPIO") %>%  data.table()
mapa_ordenado_mpio[, id := as.integer(id)]
mapa_ordenado_mpio
divipola
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("MUNICIPIO", "CÓDIGO.DANE.DEL.MUNICIPIO")] %>% setnames(names(.), c("dpto", "cod_dpto", "conteo"))
datos_simulados
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("MUNICIPIO", "CÓDIGO.DANE.DEL.MUNICIPIO")] %>% setnames(names(.), c("mpio", "cod_mpio", "conteo"))
datos_simulados
datos_simulados[, conteo := rnorm(nrow(datos_simulados, 100, 20))]
datos_simulados[, conteo := rnorm(nrow(datos_simulados), 100, 20)]
datos_simulados
datos_simulados[, conteo := round(rnorm(nrow(datos_simulados)), 100, 20)]
datos_simulados
datos_simulados[, conteo := round(rnorm(nrow(datos_simulados), 100, 20))]
datos_simulados
p1 <- ggplot() + geom_map(data = mapa_ordenado_mpio, aes(map_id = id), map = mapa_ordenado_mpio, color = "aliceblue", fill = "red")+
geom_map(data = mapa_ordenado_mpio, aes(map_id = cod_mpio, fill = conteo),
map = mapa_ordenado_mpio) + expand_limits(x = mapa_ordenado_mpio$long, y = mapa_ordenado_mpio$lat)
p
p1
datos_simulados
p1 <- ggplot() + geom_map(data = mapa_ordenado_mpio, aes(map_id = id), map = mapa_ordenado_mpio, color = "aliceblue", fill = "red")+
geom_map(data = datos_simulados, aes(map_id = cod_mpio, fill = conteo),
map = mapa_ordenado_mpio) + expand_limits(x = mapa_ordenado_mpio$long, y = mapa_ordenado_mpio$lat)
p1
mapa_ordenado_mpio
datos_simulados
p1 <- ggplot() + geom_map(data = mapa_ordenado_mpio, aes(map_id = id), map = mapa_ordenado_mpio, color = "aliceblue", fill = "red")+
geom_map(data = datos_simulados, aes(map_id = cod_mpio, fill = conteo),
map = mapa_ordenado_mpio) + expand_limits(x = mapa_ordenado_mpio$long, y = mapa_ordenado_mpio$lat)
p1
glimpse(datos_simulados)
divipola <- read.delim("divipola.csv", header = T, sep = ",", encoding = "UTF-8") %>% data.table()
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("DEPARTAMENTO", "CÓDIGO.DANE.DEL.DEPARTAMENTO")] %>% setnames(names(.), c("dpto", "cod_dpto", "conteo"))
glimpse(datos_simulados)
datos_simulados[, conteo := as.integer(round(rnorm(nrow(datos_simulados), 100, 20)))]
p1 <- ggplot() + geom_map(data = mapa_ordenado_mpio, aes(map_id = id), map = mapa_ordenado_mpio, color = "aliceblue", fill = "red")+
geom_map(data = datos_simulados, aes(map_id = cod_mpio, fill = conteo),
map = mapa_ordenado_mpio) + expand_limits(x = mapa_ordenado_mpio$long, y = mapa_ordenado_mpio$lat)
p1
divipola <- read.delim("divipola.csv", header = T, sep = ",", encoding = "UTF-8") %>% data.table()
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("MUNICIPIO", "CÓDIGO.DANE.DEL.MUNICIPIO")] %>% setnames(names(.), c("mpio", "cod_mpio", "conteo"))
datos_simulados[, conteo := as.integer(round(rnorm(nrow(datos_simulados), 100, 20)))]
datos_simulados
p1 <- ggplot() + geom_map(data = mapa_ordenado_mpio, aes(map_id = id), map = mapa_ordenado_mpio, color = "aliceblue", fill = "red")+
geom_map(data = datos_simulados, aes(map_id = cod_mpio, fill = conteo),
map = mapa_ordenado_mpio) + expand_limits(x = mapa_ordenado_mpio$long, y = mapa_ordenado_mpio$lat)
p1
mapa_ordenado_mpio
glimpse(mapa_ordenado_mpio)
glimpse(mapa_ordenado)
mapa_ordenado_mpio
p1 <- ggplot() + geom_map(data = mapa_ordenado_mpio, aes(map_id = id), map = mapa_ordenado_mpio, color = "aliceblue", fill = "gray")+
geom_map(data = datos_simulados, aes(map_id = cod_mpio, fill = conteo),
map = mapa_ordenado_mpio) + expand_limits(x = mapa_ordenado_mpio$long, y = mapa_ordenado_mpio$lat)
p1
View(mapa_ordenado_mpio)
sum(is.na(mapa_ordenado_mpio))
p1 <- ggplot() + geom_map(data = mapa_ordenado_mpio, aes(map_id = id), map = mapa_ordenado_mpio, color = "aliceblue", fill = "gray")+
geom_map(data = datos_simulados, aes(map_id = cod_mpio, fill = conteo),
map = mapa_ordenado_mpio) + expand_limits(x = mapa_ordenado_mpio$long, y = mapa_ordenado_mpio$lat)
p1
datos_simulados
sum(is.na(datos_simulados))
glimpse(datos_simulados)
glimpse(datos_simulados)
unique(mapa_ordenado_mpio$id)
unique(datos_simulados$cod_mpio)
shape_mpio <- readShapeSpatial("Mapas/Nuevos_mapas/mpio.shp", repair = T)
names(shape_mpio)
mapa_ordenado_mpio <- fortify(shape_mpio, region = "MPIO") %>%  data.table()
mapa_ordenado_mpio
mapa_ordenado_mpio[, id := as.integer(id)]
mapa_ordenado_mpio
divipola <- read.delim("divipola.csv", header = T, sep = ",", encoding = "UTF-8") %>% data.table()
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("MUNICIPIO", "CÓDIGO.DANE.DEL.MUNICIPIO")] %>% setnames(names(.), c("mpio", "cod_mpio", "conteo"))
datos_simulados
divipola
divipola <- read.delim("divipola.csv", header = T, sep = ",", encoding = "UTF-8") %>% data.table() %>% setnames(names(.), c("region", "cod_dpto", "dpto", "cod_mpio", "mpio"))
divipola
divipola[, caracteres := nchar(cod_mpio)]
divipola
divipola[, caracteres := nchar(cod_dpto)]
divipola
divipola[, cod_mpio1 := substr(cod_mpio, caracteres +1, nchar(cod_mpio))]
divipola
datos_simulados
datos_simulados <- divipola[, .(conteo = length(MUNICIPIO)), by = c("mpio", "cod_mpio")]
datos_simulados <- divipola[, .(conteo = length(mpio)), by = c("mpio", "cod_mpio")]
datos_simulados
datos_simulados[, conteo := as.integer(round(rnorm(nrow(datos_simulados), 100, 20)))]
datos_simulados
datos_simulados <- divipola[, .(conteo = length(mpio)), by = c("mpio", "cod_mpio1")]
datos_simulados[, conteo := as.integer(round(rnorm(nrow(datos_simulados), 100, 20)))]
datos_simulados
p1 <- ggplot() + geom_map(data = mapa_ordenado_mpio, aes(map_id = id), map = mapa_ordenado_mpio, color = "aliceblue", fill = "gray")+
geom_map(data = datos_simulados, aes(map_id = cod_mpio1, fill = conteo),
map = mapa_ordenado_mpio) + expand_limits(x = mapa_ordenado_mpio$long, y = mapa_ordenado_mpio$lat)
p1
